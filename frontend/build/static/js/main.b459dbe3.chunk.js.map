{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/orderConstants.js","constants/userConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","actions/userActions.js","components/SearchBox.js","components/Header.js","components/Footer.js","components/Loader.js","components/Message.js","components/Rating.js","components/Product.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartAction.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderList","orders","orderListMy","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","intitalState","middleWare","thunk","store","createStore","composeWithDevTools","applyMiddleware","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","detail","message","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Control","name","onChange","target","value","className","Button","variant","Header","useSelector","useDispatch","Navbar","bg","expand","Container","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Loader","Spinner","animation","role","style","height","width","margin","display","Message","children","Alert","Rating","text","color","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Paginate","split","Pagination","Array","keys","active","listProducts","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","search","console","log","sm","md","lg","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","loadingProductReview","errorProductReview","successProductReview","params","ListGroup","description","countInStock","xs","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","Number","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","Id","href","isDelivered","deliveredAt","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b459dbe3.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\n\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer } from './reducers/productReducers'\r\n\r\nimport { cartReducer } from './reducers/cartReducers'\r\n\r\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeliverReducer } from './reducers/orderReducers'\r\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers'\r\n\r\n\r\nconst reducer = combineReducers({\r\n    // the keys will be the states\r\n    // this is one reducer below and we select the reducer by using useSelector\r\n    productList: productListReducer, // this triggers the first call of reducer\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderList: orderListReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n\r\n})\r\n\r\n// gettig the data from localStorage with key==='cartitems but first checking if it actually exists\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\n\r\nconst shippingInfoFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst intitalState = {\r\n    // state-key-value\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingInfoFromStorage\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage }\r\n}\r\n\r\nconst middleWare = [thunk]\r\n\r\nconst store = createStore(reducer, intitalState, composeWithDevTools(applyMiddleware(...middleWare)))\r\n\r\nexport default store","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\n\r\n// a reducer actually updates the store\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                page: action.payload.page,\r\n                pages: action.payload.pages,\r\n            }\r\n\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                product: action.payload,\r\n            }\r\n\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\n// to create a product review\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true, }\r\n\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n// for product carosel\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload, }\r\n\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n\r\n    CART_SAVE_PAYMENT_METHOD,\r\n\r\n    CART_CLEAR_ITEMS,\r\n} from '../constants/cartConstants'\r\n\r\n\r\n//it'll just be the all the items in the cart\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x =>\r\n                        x.product === existItem.product ? item : x)\r\n                }\r\n\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                // spread operator\r\n                ...state,\r\n                // this will filter out the product which you want to delete from the cart\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                // original state\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n\r\n        case CART_CLEAR_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n\r\n\r\n\r\n} from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n\r\n\r\n\r\n        default:\r\n            return state\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\n//  this is for the admin panel to see al the users on the site\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n// to set the delievery state of the product\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n// this will load the orders of the logged in user\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n// this will load all the orders and can only be seen by the adminUser\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n} from '../constants/userConstants'\r\n\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        // dispatch takes two parameters type of dispact and the returned payload\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login',\r\n            { 'username': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    // deletes the logged in user\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n    // dispatch({ type: CART_CLEAR_ITEMS })\r\n\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            { 'name': name, 'email': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n//  for admin panel to see al the users\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n//  when admin deletes an user\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        // getstate is used to get that token from the admin \r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        // this will delete the selected user\r\n        const { data } = await axios.delete(\r\n            `/api/users/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction SearchBox() {\r\n\r\n    // keyword will store the value that is searched\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    // to get access to the history prop\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword) {\r\n            // just sending the user to the homepage with the keyword appende\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        } else {\r\n            // sending the user to the original page\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit={submitHandler} inline >\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className='mr-sm-2 ml-sm-5'>\r\n            </Form.Control>\r\n            <Button\r\n                type='submit'\r\n                variant='outline-success'\r\n                className='p-2'>\r\n                Seacrh\r\n            </Button>\r\n        </Form >\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { logout } from '../actions/userActions'\r\nimport SeacrhBox from './SearchBox'\r\n\r\n// rfce -- react functional component export\r\n\r\nfunction Header() {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n                <Container>\r\n                    <LinkContainer to=\"/\">\r\n                        <Navbar.Brand>ProShop</Navbar.Brand>\r\n                    </LinkContainer>\r\n\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <SeacrhBox />\r\n                        <Nav className=\"ml-auto\">\r\n                            <LinkContainer to=\"/cart\">\r\n                                <Nav.Link><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\r\n                            </LinkContainer>\r\n\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username' >\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            ) : (\r\n                                <LinkContainer to=\"/login\">\r\n                                    <Nav.Link ><i className=\"fas fa-user\"></i>Login</Nav.Link>\r\n                                </LinkContainer>\r\n                            )}\r\n\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenu' >\r\n                                    <LinkContainer to='/admin/userlist'>\r\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to='/admin/productlist'>\r\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to='/admin/orderlist'>\r\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                </NavDropdown>\r\n                            )}\r\n\r\n\r\n                        </Nav>\r\n\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar></header >\r\n\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>\r\n                        Copyright &copy; ProShop\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role='status'\r\n            style={{\r\n                height: '100px',\r\n                width: '100px',\r\n                margin: 'auto',\r\n                display: 'block'\r\n            }}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nexport function Message({ variant, children }) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\n\r\nfunction Rating({ value, text, color }) {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 1\r\n                        ? 'fas fa-star'\r\n                        : value >= 0.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 1\r\n                        ? 'fas fa-star'\r\n                        : value >= 0.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 2\r\n                        ? 'fas fa-star'\r\n                        : value >= 1.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 3\r\n                        ? 'fas fa-star'\r\n                        : value >= 2.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 4\r\n                        ? 'fas fa-star'\r\n                        : value >= 3.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 5\r\n                        ? 'fas fa-star'\r\n                        : value >= 4.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            {/* && - if it exists then out otherwise blank */}\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\r\n\r\nfunction Product({ product }) {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            {/* Alternative for a href,,,, reactifying url */}\r\n            {/* if we click a product it'll go to productScreen page */}\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} />\r\n            </Link>\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as=\"div\">\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as=\"div\">\r\n                    <div className=\"my-3\">\r\n                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                    </div>\r\n                </Card.Text>\r\n\r\n                <Card.Text as=\"h3\">\r\n                    ${product.price}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>)\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\n// taking isAdmin false bc when we're logged in as admin paginater will work and show only two products\r\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\r\n    if (keyword) {\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    return (pages > 1 && (\r\n        <Pagination>\r\n            {/* pages is coming from the backend and see the lisProducts reducer */}\r\n            {[...Array(pages).keys()].map((x) => (\r\n                <LinkContainer\r\n                    key={x + 1}\r\n                    to={!isAdmin ?\r\n                        `/?keyword=${keyword}&page=${x + 1}`\r\n                        : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\r\n                    }\r\n                >\r\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n    )\r\n}\r\n\r\nexport default Paginate","import axios from 'axios'\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n\r\n} from '../constants/productConstants'\r\n\r\n\r\n// redux thunk allows to make function inside a function\r\n\r\n// keyword is the searhced key\r\nexport const listProducts = (keyword = '') => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        // rather than the homescreen now the action will make the API call\r\n        const { data } = await axios.get(`/api/products${keyword}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        })\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        // rather than the homescreen now the action will make the API call\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/products/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n        // after the updation we want to update the product details\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// it;ll take the id of the product and review to be added\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nfunction ProductCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { error, loading, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return (loading ? <Loader />\r\n        : error\r\n            ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n                <Carousel pause='hover' className='bg-dark'>\r\n                    {products.map(product => (\r\n                        <Carousel.Item key={product._id}>\r\n                            <Link to={`/product/${product._id}`}>\r\n                                <Image src={product.image} alt={product.name} fluid />\r\n                                <Carousel.Caption className='carousel.caption'>\r\n                                    <h4>{product.name} (${product.price})</h4>\r\n                                </Carousel.Caption>\r\n                            </Link>\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n\r\n    )\r\n}\r\n\r\nexport default ProductCarousel","import React, { useState, useEffect } from 'react'\r\n// useDispatch to fire off the listProduct ACTION, useSelector let's us select a certain part of our state\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\n\r\n\r\n\r\nimport { listProducts } from '../actions/productActions'\r\n\r\nfunction HomeScreen({ history }) {\r\n    const dispatch = useDispatch()\r\n    //  for this read store.js\r\n    //  from homescreen we're triggering listProduct ACTION\r\n    const productList = useSelector(state => state.productList)\r\n\r\n    const { error, loading, products, page, pages } = productList\r\n\r\n    // so now anytime the keyword changes its gonna reload as it is a dependecy now in the useffect\r\n    let keyword = history.location.search\r\n\r\n\r\n    // {\r\n    // useState ---- state is products and setproducts is used to update the products\r\n    // const [products, setProducts] = useState([]) // right now the product is an empty array and whatever we put in this will be its actual value.\r\n    // we need to make an api call and use the setProducts value to update the state of products\r\n    // useEffect is triggered every time a component loads or the state value is updated\r\n    //  }\r\n    console.log(keyword)\r\n    useEffect(() => {\r\n\r\n        dispatch(listProducts(keyword))\r\n\r\n\r\n        // {\r\n        // we'll use axios to make the call, load in data and to make the updates\r\n        // This is moved to productActions.js\r\n        // async function fetchProducts() {\r\n        //     const { data } = await axios.get('/api/products/') // axios returns a promise/respone\r\n        //     setProducts(data) // now the state is what the response was \r\n        // }\r\n        // fetchProducts()\r\n        // }\r\n\r\n\r\n\r\n    }, [dispatch, keyword])\r\n\r\n\r\n    return (\r\n        <div>\r\n            {!keyword && <ProductCarousel />}\r\n\r\n            <h1>Latest Products</h1>\r\n            {loading ? <Loader />\r\n                : error ? <Message>{error}</Message>\r\n                    :\r\n                    <div>\r\n                        <Row>\r\n                            {/*  mapping every single product arrow function     */}\r\n                            {products.map(product => (\r\n                                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                    {/* this product component will structure all the products as 'Product.js */}\r\n                                    <Product product={product} />\r\n                                </Col>\r\n                            ))}\r\n\r\n                        </Row>\r\n                        <Paginate page={page} pages={pages} keyword={keyword} />\r\n                    </div>\r\n            }\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\n\r\nfunction ProductScreen({ match, history }) {\r\n    // 1 is the default qty value\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {\r\n        loading: loadingProductReview,\r\n        error: errorProductReview,\r\n        success: successProductReview,\r\n    } = productReviewCreate\r\n\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            // if review has been created then reinititalize them back\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n\r\n        dispatch(listProductDetails(match.params.id))\r\n\r\n    }, [dispatch, match, successProductReview])\r\n\r\n\r\n    // const [product, setProduct] = useState([]) // right now the product is an empty array and whatever we \r\n\r\n    // useEffect(() => {\r\n\r\n    //     async function fetchProduct() {\r\n    //         const { data } = await axios.get(`/api/products/${match.params.id}`)\r\n    //         setProduct(data)\r\n    //     }\r\n\r\n    //     fetchProduct()\r\n\r\n    // }, [])\r\n\r\n\r\n    const addToCartHandler = () => {\r\n\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id, {\r\n            rating,\r\n            comment\r\n        }\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to=\"/\" className='btn btn-light my-3'>Go Back</Link>\r\n\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <div>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <Image src={product.image} alt={product.name} fluid />\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <ListGroup variant='flush'>\r\n                                        <ListGroup.Item>\r\n                                            <h3>\r\n                                                {product.name}\r\n                                            </h3>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item>\r\n                                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'f8e825'} />\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item>\r\n                                            Price: ${product.price}\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item>\r\n                                            Description : {product.description}\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item>\r\n\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <Card>\r\n                                        <ListGroup variant=\"flush\">\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        Price:\r\n                                    </Col>\r\n                                                    <Col>\r\n                                                        <strong>${product.price}</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        Status:\r\n                                    </Col>\r\n                                                    <Col>\r\n                                                        {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Qty</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control\r\n                                                                as=\"select\"\r\n                                                                value={qty}\r\n                                                                onChange={(e) => setQty(e.target.value)}\r\n                                                            >\r\n                                                                {\r\n\r\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                        <option key={x + 1} value={x + 1}>\r\n                                                                            {x + 1}\r\n                                                                        </option>\r\n                                                                    ))\r\n                                                                }\r\n\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Button\r\n                                                    onClick={addToCartHandler}\r\n                                                    className=\"btn-block\"\r\n                                                    disabled={product.countInStock == 0}\r\n                                                    type='button'>Add To Cart</Button>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Button id='jp' className=\"coll btn-block\" disabled={product.countInStock == 0} type='button'>Buy Now</Button>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <h4>Reviews</h4>\r\n                                    {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\r\n\r\n                                    <ListGroup variant='flush'>\r\n                                        {product.reviews.map((review) => (\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color='#f8e825' />\r\n                                                <p>{review.createdAt.substring(0, 10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Write a review</h4>\r\n\r\n                                            {loadingProductReview && <Loader />}\r\n                                            {successProductReview && <Message variant='success'>Review Submitted</Message>}\r\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n\r\n                                            {userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label>Rating</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='select'\r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}\r\n                                                        >\r\n                                                            <option value=''>Select...</option>\r\n                                                            <option value='1'>1 - Poor</option>\r\n                                                            <option value='2'>2 - Fair</option>\r\n                                                            <option value='3'>3 - Good</option>\r\n                                                            <option value='4'>4 - Very Good</option>\r\n                                                            <option value='5'>5 - Excellent</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Review</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='textarea'\r\n                                                            row='5'\r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}\r\n                                                        ></Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Button\r\n                                                        disabled={loadingProductReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'\r\n                                                    >\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ) : (\r\n                                                <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\r\n                                            )}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    )\r\n            }\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n\r\n    CART_SAVE_PAYMENT_METHOD,\r\n\r\n    CART_CLEAR_ITEMS,\r\n} from '../constants/cartConstants'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n    console.log(data)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            //  product is the id\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n\r\n\r\n\r\n    // this will take key value pair both in string format only\r\n    // then once we want to get this data then we can parse it and turn it back it into an object\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n\r\n}\r\n\r\nexport const removeFromCart = (id) => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Row, Col, Buttons, Card, Image, Form, ListGroup, Button } from 'react-bootstrap'\r\nimport { Message } from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartAction'\r\n\r\nfunction CartScreen({ match, location, history }) {\r\n    const productId = match.params.id\r\n    // this is checking if the the product is already in the cart or not and it returns a string like = '?qty=7'\r\n    //  so we want to get the last number only that is why we're splitting it and taking the number only\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n    // console.log('cartItems:', cartItems)\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkOutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length == 0 ? (\r\n                    <Message variant='info'>Your cart is empty <Link to='/'>Go Back</Link></Message>\r\n                ) : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        ${item.price}\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            value={item.qty}\r\n                                            // item.product is the id itself\r\n                                            onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}>\r\n                                            {\r\n\r\n                                                [...Array(item.countInStock).keys()].map((x) => (\r\n                                                    <option key={x + 1} value={x + 1}>\r\n                                                        {x + 1}\r\n                                                    </option>\r\n                                                ))\r\n                                            }\r\n\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={1}>\r\n                                        <Button type='button'\r\n                                            variant='light'\r\n                                            onClick={() => removeFromCartHandler(item.product)}>\r\n                                            <i className='fa fa-trash'></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            {/* {/* LOOK THIS UP .reduce *  it takes two para(accumulator and the item we're looping through/} */}\r\n                            <h2>SubTotal:({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                            {/* to fixed is to constraint to 2 decimal places  */}\r\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                    <ListGroup>\r\n                        <Button\r\n                            type='button'\r\n                            className='btn btn-block'\r\n                            disabled={cartItems.length === 0}\r\n                            onClick={checkOutHandler}> Proceed to Checkout</Button>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row >\r\n\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction FormContainer({ children }) {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nfunction LoginScreen({ location, history }) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, loading, userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer? <Link\r\n                        to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Register\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\nimport { register } from '../actions/userActions'\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (password != confirmPassword) {\r\n            setMessage(\"Password Do Not Match\")\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter Name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Retype Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account? <Link\r\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Log In\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form, Table } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nfunction ProfileScreen({ history }) {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    // this will check if the user is logged in or not\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    // to get the succes response from the reducer\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            // if not logged in then open login page\r\n            history.push('/login')\r\n        } else {\r\n            // if user details has already been loaded\r\n            if (!user || !user.name || success || userInfo._id !== user._id) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                //  if not then dispatch\r\n                dispatch(getUserDetails(userInfo._id))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                //  if yes then set the data\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, user, userInfo, history, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password !== confirmPassword) {\r\n            setMessage(\"Password do not match\")\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }\r\n            ))\r\n            setMessage('')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>name</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='name'\r\n                            placeholder='Enter Name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            // password required : not required\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='confirmPassword'>\r\n                        <Form.Label>Retype Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                </Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? (\r\n                    <Loader />\r\n                ) : errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                    <Table striped responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Date</th>\r\n                                <th>Total</th>\r\n                                <th>Paid</th>\r\n                                <th>Deleieverd</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>${order.totalPrice}</td>\r\n                                    <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                        <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                    )}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button className='btn-sm'>Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n\r\n        </Row >\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/myorders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n// to list out all the orders in the databse\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\r\n\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Login</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Login</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Shipping</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Payment</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Place Order</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { ListGroup, Button, Card, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { saveShippingAddress } from '../actions/cartAction'\r\n\r\nfunction ShippingScreen({ history }) {\r\n    // pulling out the shipping address\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        // next page\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter address'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter city'\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter postal code'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter country'\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n            </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartAction'\r\n\r\nfunction PaymentScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    if (!shippingAddress.address) {\r\n        // if shipping address is not entered\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    // need to see the cart to pull the information\r\n    const cart = useSelector(state => state.cart)\r\n    // for evrry item we set an accumulator and keep adding the price of evert item in the cart to the accumulator\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\r\n\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n\r\n    if (!cart.paymentMethod) {\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n    }, // this means the screen will change if any of the two from down below changes\r\n        [success, history])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* last step so all steps are clickable  */}\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        {/* Shipping Address */}\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\r\n                                {'  '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        {/* Payment Method */}\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        {/* Items ordered */}\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\r\n                                Your cart is empty\r\n                            </Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n\r\n                                                <Col>\r\n                                                    {/* Link Back to that product and product is the id itself */}\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n\r\n                                                <Col md={4}>\r\n                                                    {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\nfunction OrderScreen({ match, history }) {\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    // AWwmljdhB_xnhUhWgmNhPAcc0j6kYNl4Mp8Lv9zQmAGEsrCTfNzMG9W1a6jgZEvlkGlrWfp0BaD25U5N\r\n\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    // as we already have loading above so to avoid conflicts changing the name and storing with a different name\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n\r\n    // to check the deliever sttaus of the order\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    if (!loading && !error) {\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n\r\n    //  this is set the paypal buttons\r\n    const addPayPalScript = () => {\r\n        //  this is an HTML element\r\n        const script = document.createElement('script')\r\n\r\n        script.type = 'text/javascript'\r\n        // client id is the token we got after creating the app\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AWwmljdhB_xnhUhWgmNhPAcc0j6kYNl4Mp8Lv9zQmAGEsrCTfNzMG9W1a6jgZEvlkGlrWfp0BaD25U5N'\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            // if the order is delievered then reset the status\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, order, orderId, successPay, successDeliver])\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        // pass in the order and dispatch the deliever Order action\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n        <div>\r\n            <h1>Order: {order.Id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p><strong>Name: </strong> {order.user.name}</p>\r\n                            <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {order.shippingAddress.address},  {order.shippingAddress.city}\r\n                                {'  '}\r\n                                {order.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {order.shippingAddress.country}\r\n                            </p>\r\n\r\n                            {order.isDelivered ? (\r\n                                <Message variant='success'>Delivered on {order.deliveredAt}</Message>\r\n                            ) : (\r\n                                <Message variant='warning'>Not Delivered</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? (\r\n                                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                            ) : (\r\n                                <Message variant='warning'>Not Paid</Message>\r\n                            )}\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {order.orderItems.length === 0 ? <Message variant='info'>\r\n                                Order is empty\r\n                            </Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n\r\n                                                <Col md={4}>\r\n                                                    {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            {/* if the order hasn't been paid then add the paypal button */}\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader />}\r\n\r\n                                    {!sdkReady ? (\r\n                                        <Loader />\r\n                                    ) : (\r\n                                        <PayPalButton\r\n                                            amount={order.totalPrice}\r\n                                            onSuccess={successPaymentHandler}\r\n                                        />\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            )}\r\n                        </ListGroup>\r\n                        {loadingDeliver && <Loader />}\r\n                        {/* useris admin and order is paid and not delivered */}\r\n                        {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn btn-block'\r\n                                    onClick={deliverHandler}\r\n                                >\r\n                                    Mark As Delivered\r\n                                        </Button>\r\n                            </ListGroup.Item>\r\n                        )}\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderScreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nfunction UserListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    // get the state where all users are stored\r\n    const userList = useSelector(state => state.userList)\r\n    // destructure userList and pull out that data\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    // to get the user information of the user to be deleted\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n\r\n    useEffect(() => {\r\n        // if user is admin\r\n        if (userInfo && userInfo.isAdmin) {\r\n            // in userActions\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n    // to delete an user by admin\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this user?')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>ADMIN</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {users.map(user => (\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                                        ) : (\r\n                                            <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                        )}</td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n\r\n            if (!user.name || user._id !== Number(userId)) {\r\n\r\n                dispatch(getUserDetails(userId))\r\n\r\n\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n    }, [user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/userlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter Email'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='isadmin'>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    label='Is Admin'\r\n                                    checked={isAdmin}\r\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default UserEditScreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductListScreen({ history, match }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, pages, page } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    let keyword = history.location.search\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            // if a product is created then sending the user to the edit page for tht product\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts(keyword))\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successCreate, successDelete, keyword])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this product?')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n            {/* loading means if your at requesting stage and loading is still true */}\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <div>\r\n                            <Table striped bordered hover responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>NAME</th>\r\n                                        <th>PRICE</th>\r\n                                        <th>CATEGORY</th>\r\n                                        <th>BRAND</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {products.map(product => (\r\n                                        <tr key={product._id}>\r\n                                            <td>{product._id}</td>\r\n                                            <td>{product.name}</td>\r\n                                            <td>${product.price}</td>\r\n                                            <td>{product.category}</td>\r\n                                            <td>{product.brand}</td>\r\n\r\n                                            <td>\r\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                                    <Button variant='light' className='btn-sm'>\r\n                                                        <i className='fas fa-edit'></i>\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n\r\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                                    <i className='fas fa-trash'></i>\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                            <Paginate pages={pages} page={page} isAdmin={true} />\r\n                        </div>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\n\r\nfunction ProductEditScreen({ match, history }) {\r\n\r\n    const productId = match.params.id\r\n\r\n    // all the fields of a product\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            // if the product is updated then redirect to product list\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!product.name || product._id !== Number(productId)) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }, [dispatch, product, productId, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n    }\r\n\r\n    // this needs to be syn because we're sending a post request here via axios\r\n    const uploadFileHandler = async (e) => {\r\n        // this will select the file\r\n        const file = e.target.files[0]\r\n\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter price'\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image'\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n\r\n                                {/* this will set the image */}\r\n                                <Form.File\r\n                                    id='image-file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    // whenever we upload an image it'll trigger this function\r\n                                    onChange={uploadFileHandler}\r\n                                >\r\n\r\n                                </Form.File>\r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='brand'>\r\n                                <Form.Label>Brand</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter brand'\r\n                                    value={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label>Stock</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter stock'\r\n                                    value={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter category'\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter description'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nfunction OrderListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>Total</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td>${order.totalPrice}</td>\r\n\r\n                                        <td>{order.isPaid ? (\r\n                                            order.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                            <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                        )}\r\n                                        </td>\r\n\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                            <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                        )}\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen","import Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport { Container } from 'react-bootstrap'\r\nimport HomeScreen from './screens/HomeScreen'\r\nimport ProductScreen from './screens/ProductScreen'\r\nimport CartScreen from './screens/CartScreen'\r\nimport LoginScreen from './screens/LoginScreen'\r\nimport RegisterScreen from './screens/RegisterScreen'\r\nimport ProfileScreen from './screens/ProfileScreen'\r\nimport ShippingScreen from './screens/ShippingScreen'\r\nimport PaymentScreen from './screens/PaymentScreen'\r\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\r\nimport OrderScreen from './screens/OrderScreen'\r\nimport UserListScreen from './screens/UserListScreen'\r\nimport UserEditScreen from './screens/UserEditScreen'\r\nimport ProductListScreen from './screens/ProductListScreen'\r\nimport ProductEditScreen from './screens/ProductEditScreen'\r\nimport OrderListScreen from './screens/OrderListScreen'\r\n\r\nimport { HashRouter as Router, Route } from 'react-router-dom'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      {/* py is for padding because we're using bootstrap */}\r\n      <main className='py-3'>\r\n        <Container>\r\n          < Route path='/' component={HomeScreen} exact />\r\n          < Route path='/login' component={LoginScreen} />\r\n          < Route path='/register' component={RegisterScreen} />\r\n          < Route path='/profile' component={ProfileScreen} />\r\n          < Route path='/payment' component={PaymentScreen} />\r\n          <Route path='/shipping' component={ShippingScreen} />\r\n          <Route path='/placeorder' component={PlaceOrderScreen} />\r\n          < Route path='/order/:id' component={OrderScreen} />\r\n          < Route path='/admin/orderlist' component={OrderListScreen} />\r\n          < Route path='/product/:id' component={ProductScreen} />\r\n          {/* the question mark makes it an optiaonal parameter */}\r\n          <Route path='/cart/:id?' component={CartScreen} />\r\n\r\n          < Route path='/admin/userlist' component={UserListScreen} />\r\n          < Route path='/admin/productlist' component={ProductListScreen} />\r\n          < Route path='/admin/product/:id/edit' component={ProductEditScreen} />\r\n          < Route path='/admin/user/:id/edit' component={UserEditScreen} />\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport './index.css';\r\nimport './bootstrap.min.css'\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals \r\nreportWebVitals();\r\n"],"sourceRoot":""}